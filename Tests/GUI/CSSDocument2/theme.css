
*
{
    display: flex;
    flex-direction: column;
}

.root
{
    font-family: "Segoe UI", Sans-Serif;
    font-size: 11pt;
    
    background-color: gray;

    align-items: flex-start;
}

ribbon
{
    align-self: stretch;
    flex-direction: column;
    align-items: stretch;
    height: 117px;
    border-image: url('res:Ribbon') 50 8 8 8 fill / 50px 8px 8px 8px;
    font-size: 9pt;
}

ribbon-header
{
    flex-direction: row;
   
    height: 23px;

/*  border-image: url('res:RibbonTabBackground') 22 120 0 120 fill / 22px 120px 0px 120px;*/

    background-color: #e1e6f6;
    border-image: url('res:Ribbon') 23 0 0 0 fill / 23px 0px 0px 0px;
}

ribbon-menu-button
{
    width: 56px;
    height: 22px;
    border-image: url('res:RibbonMenuButton') 0 fill;
}

ribbon-menu-button:hot
{
    border-image-source: url('res:RibbonMenuButtonHot');
}

ribbon-tab
{
    height: 19px;
    min-width: 30px;
    flex-direction: row;
    padding-left: 8px;
    padding-right: 8px;
    padding-top: 4px;
}

ribbon-tab:selected
{
    border-image: url('res:RibbonTab') 8 fill / 8px;
}

ribbon-page
{
    flex-grow: 1;
    flex-direction: row;
    align-items: stretch;
}

ribbon-section
{
    flex-direction: row;
    border-image: url('res:RibbonSection') 24 8 16 8 fill / 24px 8px 16px 8px;
    padding: 4px 8px;
    min-width: 40px;
}

ribbon-section-group
{
    flex-direction: column;
}

ribbon-section button, ribbon-section button:defaulted, ribbon-section button:pressed, ribbon-section button:disabled
{
    padding: 4px;
    min-width: 10px;
    flex-direction: row;
    border-image: none;
}

ribbon-section button imageview
{
    width: 16px;
    height: 16px;
}

ribbon-section button.big
{
    flex-direction: column;
}

ribbon-section button.big imageview
{
    width: 32px;
    height: 32px;
}

ribbon-section button:hot, ribbon-section button:toggled:hot
{
    border-style: solid;
    border-image: url('res:RibbonButtonHot') 1 8 fill;
}

ribbon-section button:pressed, ribbon-section button:toggled:pressed:hot
{
    border-style: solid;
    border-image: url('res:RibbonButtonPressed') 1 8 fill;
}

ribbon-section button:toggled
{
    border-style: solid;
    border-image: url('res:RibbonButtonToggled') 1 8 fill;
}

.test1
{
    background-color: #aa0000;
    width: 100px;
    height: 100px;
}
.test1:hot
{
    background-color: #ff0000;
}
.test2
{
    background-color: #00aa00;
    width: 80px;
    height: 80px;
}
.test2:hot
{
    background-color: #00ff00;
}
.test3
{
    background-color: #0000aa;
    width: 50px;
    height: 50px;
}
.test3:hot
{
    background-color: #0000ff;
}

label.imagelabel
{
    flex-shrink: 1;
    background: #ffff80;
    min-width: 130px;
    border-width: 1px;
    border-style: solid;
    padding: 5px;
    margin: 2px;
}

.imagecontainer
{
    align-self: stretch;
    flex-direction: row;
    background: green;
}

.imagecontainer imageview
{
    background-color: #ffff80;
    border-width: 1px;
    border-style: solid;
    padding: 5px;
    margin: 2px;
}

imageview.odd 
{
    background-color: #ffffc0;
}

imageview.fixedwidth
{
    width: 100px;
}

imageview.autoheight
{
    height: auto;
}

imageview.fixedheight 
{
    height: 100px;
}

.imagecontainer :hot 
{
    background-color: #ffffff;
}

button
{
    flex-direction: row;
    border-image: url('res:ButtonNormal') 6 6 5 5 fill / 6px 6px 5px 5px;
    padding: 5px;
}

button:defaulted
{
    border-image: url('res:ButtonDefaulted') 6 6 5 5 fill / 6px 6px 5px 5px;
}

button:hot
{
    border-image: url('res:ButtonHot') 6 6 5 5 fill / 6px 6px 5px 5px;
}

button:pressed
{
    border-image: url('res:ButtonPressed') 6 6 5 5 fill / 6px 6px 5px 5px;
}

button:disabled
{
    border-image: url('res:ButtonDisabled') 6 6 5 5 fill / 6px 6px 5px 5px;
}

button:focus
{
    border-image: url('res:ButtonFocus') 8 9 8 8 fill / 8px 9px 8px 8px;
}

button imageview
{
}

button:pressed imageview
{
    position: relative;
    left: 1px;
    top: 1px;
}

button label
{
    align-self: center;
}

button:pressed label
{
    position: relative;
    left: 1px;
    top: 1px;
}



checkbox
{
	padding-top:1px;
	padding-bottom:4px;
	flex-direction: row;
}

checkbox:disabled
{
	color:darkgray;
}
/*
checkbox:focus
{
	border-image: url('res:FocusDottedLine') 3 4 3 4 fill / 3px 4px 3px 4px repeat; 
} 
*/
checkbox checker
{
    margin-left: 3px;
	width: 13px;
	height: 13px;
}

checkbox:checked:normal checker
{
	border-image: url('res:CheckBoxCheckedNormal') 0 fill / 0px;
}

checkbox:checked:hot checker
{
	border-image: url('res:CheckBoxCheckedHot') 0 fill / 0px;
}

checkbox:checked:pressed checker
{
	border-image: url('res:CheckBoxCheckedPressed') 0 fill / 0px;
}

checkbox:checked:disabled checker
{
	border-image: url('res:CheckBoxCheckedDisabled') 0 fill / 0px;
}

checkbox:unchecked:normal checker
{
	border-image: url('res:CheckBoxUncheckedNormal') 0 fill / 0px;
}

checkbox:unchecked:pressed checker
{
	border-image: url('res:CheckBoxUncheckedPressed') 0 fill / 0px;
}

checkbox:unchecked:disabled checker
{
	border-image: url('res:CheckBoxUncheckedDisabled') 0 fill / 0px;
}

checkbox:unchecked:hot checker
{
	border-image: url('res:CheckBoxUncheckedHot') 0 fill / 0px;
}

checkbox:indeterminated:normal checker
{
	border-image: url('res:CheckBoxIndeterminatedNormal') 0 fill / 0px;
}

checkbox:indeterminated:pressed checker
{
	border-image: url('res:CheckBoxIndeterminatedPressed') 0 fill / 0px;
}

checkbox:indeterminated:disabled checker
{
	border-image: url('res:CheckBoxIndeterminatedDisabled') 0 fill / 0px;
}

checkbox:indeterminated:hot checker
{
	border-image: url('res:CheckBoxIndeterminatedHot') 0 fill / 0px;
}

radiobutton
{
	flex-direction: row;
}

radiobutton:disabled
{
	color:darkgray;
}

radiobutton checker
{
    margin-left: 3px;
	width: 13px;
	height: 13px;
}

/*
radiobutton focus
{
	border-image: url('res:FocusDottedLine') 3 4 3 4 fill / 3px 4px 3px 4px repeat; 
} 
*/

radiobutton:checked:normal checker
{
	border-image: url('res:RadioButtonCheckedNormal') 0 fill / 0px; 
}

radiobutton:checked:hot checker
{
	border-image: url('res:RadioButtonCheckedHot') 0 fill / 0px; 
}

radiobutton:checked:pressed checker
{
	border-image: url('res:RadioButtonCheckedPressed') 0 fill / 0px; 
}

radiobutton:checked:disabled checker
{
	border-image: url('res:RadioButtonCheckedDisabled') 0 fill / 0px; 
}

radiobutton:unchecked:normal checker
{
	border-image: url('res:RadioButtonUncheckedNormal') 0 fill / 0px; 
}

radiobutton:unchecked:hot checker
{
	border-image: url('res:RadioButtonUncheckedHot') 0 fill / 0px; 
}

radiobutton:unchecked:pressed checker
{
	border-image: url('res:RadioButtonUncheckedPressed') 0 fill / 0px; 
}

radiobutton:unchecked:disabled checker
{
	border-image: url('res:RadioButtonUncheckedDisabled') 0 fill / 0px; 
}


lineedit
{
    flex-direction: row;
    padding: 3px;
	text-color:black;
}

lineedit:normal
{
	border-image: url('res:LineEditNormal') 2 2 2 2 fill / 2px 2px 2px 2px; 
}

lineedit:hot
{
	border-image: url('res:LineEditHot') 2 2 2 2 fill / 2px 2px 2px 2px; 
}

lineedit:disabled
{
	border-image: url('res:LineEditDisabled') 2 2 2 2 fill / 2px 2px 2px 2px; 
	text-color:gray;
}

lineedit cursor
{
	preferred-width:1;

	background-color: black;

	blink-time-on:1000;
	blink-time-off:1000;
}

lineedit:blink_on cursor
{
	background-color: black;
}

lineedit:blink_off cursor
{
	background-color: white;
}

lineedit selection
{
    text-color: white;
	background-color: #316ac5;
}

lineedit:disabled selection
{
	background-color: #7a96df;
}

lineedit:unfocused selection
{
	background-color: #7a96df;
}
